[gd_scene load_steps=15 format=3 uid="uid://co6cm7h26680f"]

[ext_resource type="Resource" uid="uid://d0faysq8skc1l" path="res://scenes/attributes/health/health_attribute.tres" id="1_4g3au"]
[ext_resource type="Texture2D" uid="uid://wcqneepn6llo" path="res://scenes/mobs/skull/skull.png" id="1_gx06k"]
[ext_resource type="PackedScene" uid="uid://dcimufvvru2en" path="res://scenes/parts/hurtbox/hurtbox.tscn" id="4_0bpr5"]
[ext_resource type="PackedScene" uid="uid://6qy0ls61xyi8" path="res://scenes/parts/line_of_sight_detector/line_of_sight_detector.tscn" id="4_at6ur"]

[sub_resource type="GDScript" id="GDScript_68qq3"]
script/source = "extends CharacterBody2D

@export var health_attribute: HealthAttribute

@onready var animated_sprite: AnimatedSprite2D = $AnimatedSprite2D
@onready var navigation_agent_2d: NavigationAgent2D = $NavigationAgent2D
@onready var event_bus: Node = get_node(\"/root/EventBus\")

const speed: float = 200
var player: Node2D
var is_enabled: bool = false

func _ready():
	event_bus.gameplay_started.connect(func(): is_enabled = true)
	set_physics_process(false)
	
func _physics_process(_delta: float):
	navigation_agent_2d.target_position = player.global_position
	velocity = global_position.direction_to(navigation_agent_2d.get_next_path_position()) * speed
	move_and_slide()

func _on_line_of_sight_detector_object_sighted(object):
	if !is_enabled: return
	self.player = object
	set_physics_process(true)
	animated_sprite.play(\"moving\")

func _on_line_of_sight_detector_object_left_range(object):
	self.player = null
	set_physics_process(false)
	animated_sprite.play(\"idle\")
"

[sub_resource type="AtlasTexture" id="AtlasTexture_f73yy"]
atlas = ExtResource("1_gx06k")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1sbjr"]
atlas = ExtResource("1_gx06k")
region = Rect2(64, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qoive"]
atlas = ExtResource("1_gx06k")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_hq5a8"]
atlas = ExtResource("1_gx06k")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_unw2c"]
atlas = ExtResource("1_gx06k")
region = Rect2(256, 0, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_1mq0k"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_f73yy")
}],
"loop": true,
"name": &"idle",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_1sbjr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qoive")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hq5a8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_unw2c")
}],
"loop": true,
"name": &"moving",
"speed": 12.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_3jx18"]
radius = 22.0907

[sub_resource type="CircleShape2D" id="CircleShape2D_8ewnt"]
radius = 30.2655

[sub_resource type="CircleShape2D" id="CircleShape2D_c881b"]
radius = 514.062

[node name="Skull" type="CharacterBody2D"]
scale = Vector2(0.5, 0.5)
collision_layer = 2
collision_mask = 0
script = SubResource("GDScript_68qq3")
health_attribute = ExtResource("1_4g3au")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_1mq0k")
animation = &"idle"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_3jx18")

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="."]

[node name="Hurtbox" parent="." instance=ExtResource("4_0bpr5")]
collision_mask = 1

[node name="CollisionShape2D" type="CollisionShape2D" parent="Hurtbox"]
shape = SubResource("CircleShape2D_8ewnt")

[node name="LineOfSightDetector" parent="." instance=ExtResource("4_at6ur")]
collision_layer = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="LineOfSightDetector"]
shape = SubResource("CircleShape2D_c881b")

[connection signal="object_left_range" from="LineOfSightDetector" to="." method="_on_line_of_sight_detector_object_left_range"]
[connection signal="object_sighted" from="LineOfSightDetector" to="." method="_on_line_of_sight_detector_object_sighted"]
